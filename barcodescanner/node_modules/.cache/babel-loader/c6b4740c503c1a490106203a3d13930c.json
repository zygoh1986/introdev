{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zhangyu/Documents/barcodescanner-app/barcodescanner-app/barcodescanner/src/containers/Scan/Scan.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { processBarcode, startScanning } from '../../store/actions/index';\nimport Spinner from '../../components/Spinner/Spinner';\nimport Scanner from '../../components/Scanner/Scanner';\nimport Product from '../../components/Product/Product';\nimport './Scan.css';\n\nclass Scan extends Component {\n  constructor(props) {\n    super(props);\n    this._onBarcodeDetect = this._onBarcodeDetect.bind(this);\n  }\n\n  _onBarcodeDetect(barcode) {\n    this.props.process(barcode);\n  }\n\n  render() {\n    let componentRendered = /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divMargin\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.props.startScanning,\n          className: \"btn btn-primary btn-md btn-block btn-scan\",\n          children: 'Start Scanning'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n\n    if (this.props.invalid) {\n      componentRendered = /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divMargin\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Invalid Barcode!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: this.props.startScanning,\n            className: \"btn btn-primary btn-md btn-block btn-scan\",\n            children: 'Try Again'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this);\n    } else if (this.props.noApi) {\n      componentRendered = /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divMargin\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"You need an API key to run this App.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: this.props.startScanning,\n            className: \"btn btn-primary btn-md btn-block btn-scan\",\n            children: 'Try Again'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this);\n    }\n\n    if (this.props.scan) {\n      componentRendered = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scannerCam\",\n        children: /*#__PURE__*/_jsxDEV(Scanner, {\n          onBarcodeDetect: this._onBarcodeDetect,\n          noCamera: () => console.log('there was no camera')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }, this);\n    }\n\n    if (this.props.spinner) {\n      componentRendered = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }, this);\n    }\n\n    if (this.props.productScanned != null) {\n      if (this.props.scan) {\n        componentRendered = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scannerCam\",\n          children: /*#__PURE__*/_jsxDEV(Scanner, {\n            onBarcodeDetect: this._onBarcodeDetect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this);\n      } else {\n        componentRendered = /*#__PURE__*/_jsxDEV(Product, {\n          item: this.props.productScanned,\n          click: this.props.startScanning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scannerContainer\",\n        children: componentRendered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    productScanned: state.scanned.productScanned,\n    spinner: state.scanned.spinner,\n    scan: state.scanned.startScanning,\n    invalid: state.scanned.invalidBarcode,\n    noApi: state.scanned.noApi\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    process: barcode => {\n      dispatch(processBarcode(barcode));\n    },\n    startScanning: () => {\n      dispatch(startScanning());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Scan);","map":{"version":3,"sources":["/Users/zhangyu/Documents/barcodescanner-app/barcodescanner-app/barcodescanner/src/containers/Scan/Scan.js"],"names":["React","Component","Fragment","connect","processBarcode","startScanning","Spinner","Scanner","Product","Scan","constructor","props","_onBarcodeDetect","bind","barcode","process","render","componentRendered","invalid","noApi","scan","console","log","spinner","productScanned","mapStateToProps","state","ownProps","scanned","invalidBarcode","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,EAAwBC,aAAxB,QAA4C,2BAA5C;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAO,YAAP;;AAGA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAE3BS,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDD,EAAAA,gBAAgB,CAACE,OAAD,EAAS;AACvB,SAAKH,KAAL,CAAWI,OAAX,CAAmBD,OAAnB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AAEP,QAAIC,iBAAiB,gBACnB,QAAC,QAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAE,KAAKN,KAAL,CAAWN,aAFtB;AAGE,UAAA,SAAS,EAAC,2CAHZ;AAAA,oBAGyD;AAHzD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;;AAUA,QAAG,KAAKM,KAAL,CAAWO,OAAd,EAAsB;AACpBD,MAAAA,iBAAiB,gBACjB,QAAC,QAAD;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,OAAO,EAAE,KAAKN,KAAL,CAAWN,aAFtB;AAGE,YAAA,SAAS,EAAC,2CAHZ;AAAA,sBAIK;AAJL;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA;AAaD,KAdD,MAcO,IAAG,KAAKM,KAAL,CAAWQ,KAAd,EAAoB;AACzBF,MAAAA,iBAAiB,gBACjB,QAAC,QAAD;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,OAAO,EAAE,KAAKN,KAAL,CAAWN,aAFtB;AAGE,YAAA,SAAS,EAAC,2CAHZ;AAAA,sBAIK;AAJL;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA;AAaD;;AAGD,QAAG,KAAKM,KAAL,CAAWS,IAAd,EAAmB;AACjBH,MAAAA,iBAAiB,gBAAG;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BAChB,QAAC,OAAD;AAAS,UAAA,eAAe,EAAE,KAAKL,gBAA/B;AACA,UAAA,QAAQ,EAAE,MAAIS,OAAO,CAACC,GAAR,CAAY,qBAAZ;AADd;AAAA;AAAA;AAAA;AAAA;AADgB;AAAA;AAAA;AAAA;AAAA,cAApB;AAID;;AACD,QAAG,KAAKX,KAAL,CAAWY,OAAd,EAAsB;AACpBN,MAAAA,iBAAiB,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAApB;AACD;;AACD,QAAG,KAAKN,KAAL,CAAWa,cAAX,IAA6B,IAAhC,EAAqC;AACnC,UAAG,KAAKb,KAAL,CAAWS,IAAd,EAAoB;AAClBH,QAAAA,iBAAiB,gBAAG;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCAChB,QAAC,OAAD;AACE,YAAA,eAAe,EAAE,KAAKL;AADxB;AAAA;AAAA;AAAA;AAAA;AADgB;AAAA;AAAA;AAAA;AAAA,gBAApB;AAKD,OAND,MAMO;AACLK,QAAAA,iBAAiB,gBAAG,QAAC,OAAD;AACE,UAAA,IAAI,EAAE,KAAKN,KAAL,CAAWa,cADnB;AAEE,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWN;AAFpB;AAAA;AAAA;AAAA;AAAA,gBAApB;AAGD;AACF;;AAGD,wBACE,QAAC,QAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBACGY;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AArF0B;;AAyF7B,MAAMQ,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLH,IAAAA,cAAc,EAAEE,KAAK,CAACE,OAAN,CAAcJ,cADzB;AAELD,IAAAA,OAAO,EAAEG,KAAK,CAACE,OAAN,CAAcL,OAFlB;AAGLH,IAAAA,IAAI,EAAEM,KAAK,CAACE,OAAN,CAAcvB,aAHf;AAILa,IAAAA,OAAO,EAAEQ,KAAK,CAACE,OAAN,CAAcC,cAJlB;AAKLV,IAAAA,KAAK,EAAEO,KAAK,CAACE,OAAN,CAAcT;AALhB,GAAP;AAOD,CARD;;AAUA,MAAMW,kBAAkB,GAAG,CAACC,QAAD,EAAWJ,QAAX,KAAwB;AACjD,SAAO;AACLZ,IAAAA,OAAO,EAAGD,OAAD,IAAa;AAAEiB,MAAAA,QAAQ,CAAC3B,cAAc,CAACU,OAAD,CAAf,CAAR;AAAmC,KADtD;AAELT,IAAAA,aAAa,EAAE,MAAM;AAAC0B,MAAAA,QAAQ,CAAC1B,aAAa,EAAd,CAAR;AAA0B;AAF3C,GAAP;AAID,CALD;;AAOA,eAAeF,OAAO,CAACsB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CrB,IAA7C,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport {connect} from 'react-redux'\nimport {processBarcode, startScanning} from '../../store/actions/index'\nimport Spinner from '../../components/Spinner/Spinner'\nimport Scanner from '../../components/Scanner/Scanner'\nimport Product from '../../components/Product/Product'\nimport './Scan.css'\n\n\nclass Scan extends Component {\n\n  constructor(props){\n    super(props);\n    this._onBarcodeDetect = this._onBarcodeDetect.bind(this)\n  }\n\n  _onBarcodeDetect(barcode){\n    this.props.process(barcode)\n  }\n \n  render() {\n    \n    let componentRendered = \n      <Fragment>\n        <div className='divMargin'>\n          <button \n            type=\"button\" \n            onClick={this.props.startScanning}\n            className=\"btn btn-primary btn-md btn-block btn-scan\">{'Start Scanning'}</button>\n        </div>\n      </Fragment>\n\n    if(this.props.invalid){\n      componentRendered =\n      <Fragment>\n        <div className='divMargin'>\n          <div className='invalid'>\n            <h1>Invalid Barcode!</h1>\n          </div>\n          <button \n            type=\"button\" \n            onClick={this.props.startScanning}\n            className=\"btn btn-primary btn-md btn-block btn-scan\">\n              {'Try Again'}</button>\n        </div>\n      </Fragment>\n    } else if(this.props.noApi){\n      componentRendered =\n      <Fragment>\n        <div className='divMargin'>\n          <div className='invalid'>\n            <h1>You need an API key to run this App.</h1>\n          </div>\n          <button \n            type=\"button\" \n            onClick={this.props.startScanning}\n            className=\"btn btn-primary btn-md btn-block btn-scan\">\n              {'Try Again'}</button>\n        </div>\n      </Fragment>\n    }\n\n\n    if(this.props.scan){\n      componentRendered = <div className=\"scannerCam\">\n          <Scanner onBarcodeDetect={this._onBarcodeDetect} \n          noCamera={()=>console.log('there was no camera')} />\n      </div>\n    }\n    if(this.props.spinner){\n      componentRendered = <Spinner />\n    }\n    if(this.props.productScanned != null){\n      if(this.props.scan) {\n        componentRendered = <div className=\"scannerCam\">\n            <Scanner \n              onBarcodeDetect={this._onBarcodeDetect} \n              />\n          </div>\n      } else {\n        componentRendered = <Product \n                              item={this.props.productScanned}\n                              click={this.props.startScanning}/>\n      }\n    }\n\n\n    return (\n      <Fragment>\n        <div className=\"scannerContainer\"> \n          {componentRendered}\n        </div>\n      </Fragment>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    productScanned: state.scanned.productScanned,\n    spinner: state.scanned.spinner,\n    scan: state.scanned.startScanning,\n    invalid: state.scanned.invalidBarcode,\n    noApi: state.scanned.noApi\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    process: (barcode) => { dispatch(processBarcode(barcode)) },\n    startScanning: () => {dispatch(startScanning())}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Scan)"]},"metadata":{},"sourceType":"module"}