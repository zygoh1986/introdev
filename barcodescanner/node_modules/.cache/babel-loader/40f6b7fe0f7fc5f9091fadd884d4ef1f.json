{"ast":null,"code":"//import {APIKEY, URL_PATH, URL_EXTENSION} from '../../assets/config'\nimport { base } from '../../assets/config';\nexport const startScanning = () => {\n  return {\n    type: \"START_SCANNING\"\n  };\n};\nexport const clearScanned = () => {\n  return {\n    type: 'CLEAR_SCANNED'\n  };\n};\nexport const setItem = i => {\n  return {\n    type: 'SET_ITEM',\n    payload: i\n  };\n};\nexport const deleteItem = i => {\n  return {\n    type: 'DELETE_ITEM',\n    payload: i\n  };\n};\nexport const processBarcode = barcode => {\n  // return dispatch => {\n  //   dispatch(spinnerOn())\n  //   //let url = URL_PATH + barcode + URL_EXTENSION + APIKEY\n  //   let req = new Request(base , {\n  //     headers: {\n  //       'Access-Control-Allow-Origin': 'http://localhost:3000'\n  //     },\n  //     mode: 'no-cors'\n  //   })\n  //   let product = null\n  //   fetch(req)\n  //   .catch(err => console.log('error', err))\n  //   .then(res => res.json())\n  //    .then(res => {\n  //    if (res.status !== 200) {\n  //      return res.status\n  //    }\n  //    })\n  // .then(res => {\n  //   //console.log(res.status)\n  //   if(res.status !== 200){\n  //     return {\n  //       resStatus: res.status\n  //     }\n  //   } else if (res.status === 200) {\n  //     return res.json()\n  //   }\n  // })\n  //  .then(parsedRes => {\n  //    if(parsedRes.resStatus !== 200){\n  //      parsedRes.resStatus === 0 ? dispatch(invalidBarcode('noAPI')) : dispatch(invalidBarcode('invalid'))\n  // } else {\n  product = {\n    names: parsedRes.data[0].names,\n    description: parsedRes.data[0].description,\n    income: parsedRes.data[0].income // product_name: parsedRes.products[0].product_name,\n    // product_image: parsedRes.products[0].images[0],\n    // manufacturer: parsedRes.products[0].manufacturer,\n    // brand: parsedRes.products[0].brand,\n    // category: parsedRes.products[0].category,\n    // description: parsedRes.products[0].description,\n\n  };\n  dispatch(productDetected(product));\n}; //})\n//}\n//}\n\nexport const spinnerOn = () => {\n  return {\n    type: 'SPINNER_ON'\n  };\n};\nexport const productDetected = product => {\n  return {\n    type: 'PRODUCT_DETECTED',\n    payload: product\n  };\n};\nexport const invalidBarcode = err => {\n  let errText = err === 'noAPI' ? 'NO_API_KEY' : 'INVALID_BARCODE';\n  return {\n    type: errText\n  };\n};","map":{"version":3,"sources":["/Users/zhangyu/Documents/barcodescanner-app/barcodescanner-app/barcodescanner/src/store/actions/scannedItems.js"],"names":["base","startScanning","type","clearScanned","setItem","i","payload","deleteItem","processBarcode","barcode","product","names","parsedRes","data","description","income","dispatch","productDetected","spinnerOn","invalidBarcode","err","errText"],"mappings":"AAAA;AACA,SAASA,IAAT,QAAqB,qBAArB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJI;AAML,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAME,OAAO,GAAIC,CAAD,IAAO;AAC5B,SAAO;AACLH,IAAAA,IAAI,EAAE,UADD;AAELI,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,UAAU,GAAIF,CAAD,IAAO;AAC/B,SAAO;AACLH,IAAAA,IAAI,EAAE,aADD;AAELI,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,cAAc,GAAIC,OAAD,IAAa;AACzC;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACIC,EAAAA,OAAO,GAAG;AACRC,IAAAA,KAAK,EAAEC,SAAS,CAACC,IAAV,CAAe,CAAf,EAAkBF,KADjB;AAERG,IAAAA,WAAW,EAAEF,SAAS,CAACC,IAAV,CAAe,CAAf,EAAkBC,WAFvB;AAGRC,IAAAA,MAAM,EAAEH,SAAS,CAACC,IAAV,CAAe,CAAf,EAAkBE,MAHlB,CAIR;AACA;AACA;AACA;AACA;AACA;;AATQ,GAAV;AAWAC,EAAAA,QAAQ,CAACC,eAAe,CAACP,OAAD,CAAhB,CAAR;AACD,CApDA,C,CAqDH;AACF;AACA;;AAEF,OAAO,MAAMQ,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLhB,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAOP,OAAO,MAAMe,eAAe,GAAIP,OAAD,IAAa;AAC1C,SAAO;AACLR,IAAAA,IAAI,EAAE,kBADD;AAELI,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMS,cAAc,GAAIC,GAAD,IAAS;AACrC,MAAIC,OAAO,GAAGD,GAAG,KAAK,OAAR,GAAkB,YAAlB,GAAiC,iBAA/C;AACA,SAAO;AACLlB,IAAAA,IAAI,EAAEmB;AADD,GAAP;AAGH,CALQ","sourcesContent":["//import {APIKEY, URL_PATH, URL_EXTENSION} from '../../assets/config'\nimport { base } from '../../assets/config'\n\nexport const startScanning = () => {\n    return {\n      type: \"START_SCANNING\"\n    }\n  }\n  \n  export const clearScanned = () => {\n    return {\n      type: 'CLEAR_SCANNED'\n    }\n  }\n  \n  export const setItem = (i) => {\n    return {\n      type: 'SET_ITEM',\n      payload: i\n    }\n  }\n  \n  export const deleteItem = (i) => {\n    return {\n      type: 'DELETE_ITEM',\n      payload: i\n    }\n  }\n  \n  export const processBarcode = (barcode) => {\n    // return dispatch => {\n    //   dispatch(spinnerOn())\n      \n    //   //let url = URL_PATH + barcode + URL_EXTENSION + APIKEY\n      \n    //   let req = new Request(base , {\n    //     headers: {\n    //       'Access-Control-Allow-Origin': 'http://localhost:3000'\n    //     },\n    //     mode: 'no-cors'\n    //   })\n      \n    //   let product = null\n    //   fetch(req)\n    //   .catch(err => console.log('error', err))\n    //   .then(res => res.json())\n    //    .then(res => {\n    //    if (res.status !== 200) {\n    //      return res.status\n    //    }\n    //    })\n\n      // .then(res => {\n      //   //console.log(res.status)\n      //   if(res.status !== 200){\n      //     return {\n      //       resStatus: res.status\n      //     }\n      //   } else if (res.status === 200) {\n      //     return res.json()\n      //   }\n      // })\n      \n\n      //  .then(parsedRes => {\n      //    if(parsedRes.resStatus !== 200){\n      //      parsedRes.resStatus === 0 ? dispatch(invalidBarcode('noAPI')) : dispatch(invalidBarcode('invalid'))\n           \n      // } else {\n          product = {\n            names: parsedRes.data[0].names,\n            description: parsedRes.data[0].description,\n            income: parsedRes.data[0].income,\n            // product_name: parsedRes.products[0].product_name,\n            // product_image: parsedRes.products[0].images[0],\n            // manufacturer: parsedRes.products[0].manufacturer,\n            // brand: parsedRes.products[0].brand,\n            // category: parsedRes.products[0].category,\n            // description: parsedRes.products[0].description,\n          }\n          dispatch(productDetected(product))\n        } \n      //})\n    //}\n    //}\n  \n  export const spinnerOn = () => {\n    return {\n      type: 'SPINNER_ON'\n    }\n  }\n    \n    \n  export const productDetected = (product) => {\n    return {\n      type: 'PRODUCT_DETECTED',\n      payload: product\n    }\n  }\n  \n  export const invalidBarcode = (err) => {\n    let errText = err === 'noAPI' ? 'NO_API_KEY' : 'INVALID_BARCODE'\n    return {\n      type: errText,\n    }\n}\n"]},"metadata":{},"sourceType":"module"}