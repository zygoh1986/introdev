{"ast":null,"code":"/**\r\n *  Rebase.js\r\n * */\n\n/**\r\n * rebase\r\n * @param content{String}\r\n * @param options{Object}\r\n * @param references{String} [optional]\r\n * */\nvar rebase = module.exports = function (content, options) {\n  if (!options) return content;\n\n  for (var scope in options) {\n    var rewriter = rebase[scope];\n    scope = options[scope];\n\n    if (rewriter && scope) {\n      if (scope.forEach) {\n        scope.forEach(function (rule) {\n          if (rule.tag) {\n            content = rebase.tag(content, rule.tag, rule.attr, rule.base, rule.rebase);\n          } else {\n            content = rewriter(content, rule.base, rule.rebase);\n          }\n        });\n      } else {\n        for (var base in scope) {\n          content = rewriter(content, base, scope[base]);\n        }\n      }\n    }\n  }\n\n  return content;\n};\n/**\r\n * \"any string\"\r\n * */\n\n\nrebase.string = function (content, search, replace) {\n  search = new RegExp(\"^\" + search);\n  return content.replace(/('|\")((?:\\\\\\1|.)*?)\\1/g, function (match, str, inside) {\n    if (search.test(inside)) {\n      inside = inside.replace(search, replace);\n    }\n\n    return str + inside + str;\n  });\n};\n/**\r\n * <tag attr=\"\">\r\n * */\n\n\nvar tag = rebase.tag = function (content, tag, attr, search, replace) {\n  tag = new RegExp(\"<\" + tag + \"([^>]+)>\", 'g'); // capture attribute space\n\n  attr = new RegExp(\"(\" + attr + ')\\\\s*=\\\\s*\"\\\\s*([^\"]+)\\\\s*\"'); // capture attribute name and value\n\n  search = new RegExp(\"^\" + search);\n  return content.replace(tag, function (match) {\n    return match.replace(attr, function (match, attr, value) {\n      if (search.test(value)) {\n        return attr + '=\"' + value.replace(search, replace) + '\"';\n      } else return match;\n    });\n  });\n};\n/**\r\n * <script type=\"text/javascript\" src=\"\"></script>\r\n * */\n\n\nrebase.script = function (content, search, replace) {\n  return tag(content, \"script\", \"src\", search, replace);\n};\n/**\r\n * <link rel=\"stylesheet\" href=\"\"/>\r\n * */\n\n\nrebase.link = function (content, search, replace) {\n  return tag(content, \"link\", \"href\", search, replace);\n};\n/**\r\n * <a href=\"\"></a>\r\n * */\n\n\nrebase.a = function (content, search, replace) {\n  return tag(content, \"a\", \"href\", search, replace);\n};\n/**\r\n * <img src=\"\" alt=\"\"/>\r\n * */\n\n\nrebase.img = function (content, search, replace) {\n  return tag(content, \"img\", \"src\", search, replace);\n};\n/**\r\n * background-image: url(\"\");\r\n * */\n\n\nrebase.url = function (content, search, replace) {\n  search = new RegExp(\"^\" + search);\n  return content.replace(/url\\(\\s*['\"]?([^\\)]+?)['\"]?\\s*\\)/g, function (match, url) {\n    if (search.test(url)) {\n      return \"url(\\\"\" + url.replace(search, replace) + \"\\\")\";\n    } else return match;\n  });\n};\n/**\r\n * @import \"\";\r\n * */\n\n\nrebase.imports = function (content, search, replace) {\n  search = new RegExp(\"^\" + search);\n  return content.replace(/@import\\s+\"([^\")]+)\"/g, function (match, url) {\n    if (search.test(url)) {\n      return \"@import \\\"\" + url.replace(search, replace) + \"\\\"\";\n    } else return match;\n  });\n};","map":{"version":3,"sources":["/Users/zhangyu/Documents/barcodescanner-app/barcodescanner-app/barcodescanner/node_modules/rebase/rebase.js"],"names":["rebase","module","exports","content","options","scope","rewriter","forEach","rule","tag","attr","base","string","search","replace","RegExp","match","str","inside","test","value","script","link","a","img","url","imports"],"mappings":"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","sourcesContent":["/**\r\n *  Rebase.js\r\n * */\r\n\r\n/**\r\n * rebase\r\n * @param content{String}\r\n * @param options{Object}\r\n * @param references{String} [optional]\r\n * */\r\nvar rebase = module.exports = function( content, options ){\r\n  if( !options ) return content\r\n  for( var scope in options ){\r\n    var rewriter = rebase[scope]\r\n    scope = options[scope]\r\n    if( rewriter && scope ) {\r\n      if ( scope.forEach ) {\r\n        scope.forEach(function( rule ){\r\n          if ( rule.tag ) {\r\n            content = rebase.tag(content, rule.tag, rule.attr, rule.base, rule.rebase)\r\n          }\r\n          else {\r\n            content = rewriter(content, rule.base, rule.rebase)\r\n          }\r\n        })\r\n      }\r\n      else {\r\n        for( var base in scope ){\r\n          content = rewriter(content, base, scope[base])\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return content\r\n}\r\n\r\n/**\r\n * \"any string\"\r\n * */\r\nrebase.string = function( content, search, replace ){\r\n  search = new RegExp(\"^\"+search)\r\n  return content.replace(/('|\")((?:\\\\\\1|.)*?)\\1/g, function( match, str, inside ){\r\n    if ( search.test(inside) ) {\r\n      inside = inside.replace(search, replace)\r\n    }\r\n    return str + inside + str\r\n  })\r\n}\r\n\r\n/**\r\n * <tag attr=\"\">\r\n * */\r\nvar tag = rebase.tag = function( content, tag, attr, search, replace ){\r\n  tag = new RegExp(\"<\"+tag+\"([^>]+)>\", 'g') // capture attribute space\r\n  attr = new RegExp(\"(\"+attr+')\\\\s*=\\\\s*\"\\\\s*([^\"]+)\\\\s*\"') // capture attribute name and value\r\n  search = new RegExp(\"^\"+search)\r\n  return content.replace(tag, function( match ){\r\n    return match.replace(attr, function( match, attr, value ){\r\n      if ( search.test(value) ) {\r\n        return attr+'=\"'+value.replace(search, replace)+'\"'\r\n      }\r\n      else return match\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * <script type=\"text/javascript\" src=\"\"></script>\r\n * */\r\nrebase.script = function( content, search, replace ){\r\n  return tag(content, \"script\", \"src\", search, replace)\r\n}\r\n\r\n/**\r\n * <link rel=\"stylesheet\" href=\"\"/>\r\n * */\r\nrebase.link = function( content, search, replace ){\r\n  return tag(content, \"link\", \"href\", search, replace)\r\n}\r\n\r\n/**\r\n * <a href=\"\"></a>\r\n * */\r\nrebase.a = function( content, search, replace ){\r\n  return tag(content, \"a\", \"href\", search, replace)\r\n}\r\n\r\n/**\r\n * <img src=\"\" alt=\"\"/>\r\n * */\r\nrebase.img = function( content, search, replace ){\r\n  return tag(content, \"img\", \"src\", search, replace)\r\n}\r\n\r\n/**\r\n * background-image: url(\"\");\r\n * */\r\nrebase.url = function( content, search, replace ){\r\n  search = new RegExp(\"^\"+search)\r\n  return content.replace(/url\\(\\s*['\"]?([^\\)]+?)['\"]?\\s*\\)/g, function( match, url ){\r\n    if ( search.test(url) ) {\r\n      return \"url(\\\"\"+url.replace(search, replace)+\"\\\")\"\r\n    }\r\n    else return match\r\n  })\r\n}\r\n\r\n/**\r\n * @import \"\";\r\n * */\r\nrebase.imports = function( content, search, replace ){\r\n  search = new RegExp(\"^\"+search)\r\n  return content.replace(/@import\\s+\"([^\")]+)\"/g, function( match, url ){\r\n    if ( search.test(url) ) {\r\n      return \"@import \\\"\"+url.replace(search, replace)+\"\\\"\"\r\n    }\r\n    else return match\r\n  })\r\n}"]},"metadata":{},"sourceType":"script"}