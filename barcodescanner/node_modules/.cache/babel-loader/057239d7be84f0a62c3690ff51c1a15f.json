{"ast":null,"code":"//import {APIKEY, URL_PATH, URL_EXTENSION} from '../../assets/config'\n//import fire from '../../assets/config'\nimport firebase from \"../../assets/config\";\nexport const startScanning = () => {\n  return {\n    type: \"START_SCANNING\"\n  };\n};\nexport const clearScanned = () => {\n  return {\n    type: 'CLEAR_SCANNED'\n  };\n};\nexport const setItem = i => {\n  return {\n    type: 'SET_ITEM',\n    payload: i\n  };\n};\nexport const deleteItem = i => {\n  return {\n    type: 'DELETE_ITEM',\n    payload: i\n  };\n};\nexport const processBarcode = barcode => {\n  return dispatch => {\n    dispatch(spinnerOn()); //let url = URL_PATH + barcode + URL_EXTENSION + APIKEY\n\n    let req = new Request(firebase); //, {\n    //   headers: {\n    //     'Access-Control-Allow-Origin': 'http://localhost:3000'\n    //   },\n    //   mode: 'no-cors'\n    // })\n\n    console.log(req);\n    let product = null;\n    fetch(req).catch(err => console.log('error', err)).then(res => res.json()).then(res => {\n      if (res.status !== 200) {\n        return res.status;\n      }\n    }) // .then(res => {\n    //   //console.log(res.status)\n    //   if(res.status !== 200){\n    //     return {\n    //       resStatus: res.status\n    //     }\n    //   } else if (res.status === 200) {\n    //     return res.json()\n    //   }\n    // })\n    .then(parsedRes => {\n      //    if(parsedRes.resStatus !== 200){\n      //      parsedRes.resStatus === 0 ? dispatch(invalidBarcode('noAPI')) : dispatch(invalidBarcode('invalid'))\n      // } else {\n      product = {\n        names: parsedRes.data[0].names,\n        description: parsedRes.data[0].description,\n        income: parsedRes.data[0].income // product_name: parsedRes.products[0].product_name,\n        // product_image: parsedRes.products[0].images[0],\n        // manufacturer: parsedRes.products[0].manufacturer,\n        // brand: parsedRes.products[0].brand,\n        // category: parsedRes.products[0].category,\n        // description: parsedRes.products[0].description,\n\n      };\n      dispatch(productDetected(product)); //} \n    });\n  };\n};\nexport const spinnerOn = () => {\n  return {\n    type: 'SPINNER_ON'\n  };\n};\nexport const productDetected = product => {\n  return {\n    type: 'PRODUCT_DETECTED',\n    payload: product\n  };\n};\nexport const invalidBarcode = err => {\n  let errText = err === 'noAPI' ? 'NO_API_KEY' : 'INVALID_BARCODE';\n  return {\n    type: errText\n  };\n};","map":{"version":3,"sources":["/Users/zhangyu/Documents/barcodescanner-app/barcodescanner-app/barcodescanner/src/store/actions/scannedItems.js"],"names":["firebase","startScanning","type","clearScanned","setItem","i","payload","deleteItem","processBarcode","barcode","dispatch","spinnerOn","req","Request","console","log","product","fetch","catch","err","then","res","json","status","parsedRes","names","data","description","income","productDetected","invalidBarcode","errText"],"mappings":"AAAA;AACA;AACA,OAAOA,QAAP,MAAqB,qBAArB;AAGA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJI;AAML,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAME,OAAO,GAAIC,CAAD,IAAO;AAC5B,SAAO;AACLH,IAAAA,IAAI,EAAE,UADD;AAELI,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,UAAU,GAAIF,CAAD,IAAO;AAC/B,SAAO;AACLH,IAAAA,IAAI,EAAE,aADD;AAELI,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,cAAc,GAAIC,OAAD,IAAa;AACzC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,SAAS,EAAV,CAAR,CADiB,CAGjB;;AAEA,QAAIC,GAAG,GAAG,IAAIC,OAAJ,CAAYb,QAAZ,CAAV,CALiB,CAKe;AAChC;AACA;AACA;AACA;AACA;;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,QAAII,OAAO,GAAG,IAAd;AACAC,IAAAA,KAAK,CAACL,GAAD,CAAL,CACCM,KADD,CACOC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,GAArB,CADd,EAECC,IAFD,CAEMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFb,EAGCF,IAHD,CAGMC,GAAG,IAAI;AACb,UAAIA,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpB,eAAOF,GAAG,CAACE,MAAX;AACD;AACA,KAPH,EASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA,KAqBGH,IArBH,CAqBQI,SAAS,IAAI;AACrB;AACA;AAEA;AACIR,MAAAA,OAAO,GAAG;AACRS,QAAAA,KAAK,EAAED,SAAS,CAACE,IAAV,CAAe,CAAf,EAAkBD,KADjB;AAERE,QAAAA,WAAW,EAAEH,SAAS,CAACE,IAAV,CAAe,CAAf,EAAkBC,WAFvB;AAGRC,QAAAA,MAAM,EAAEJ,SAAS,CAACE,IAAV,CAAe,CAAf,EAAkBE,MAHlB,CAIR;AACA;AACA;AACA;AACA;AACA;;AATQ,OAAV;AAWAlB,MAAAA,QAAQ,CAACmB,eAAe,CAACb,OAAD,CAAhB,CAAR,CAhBiB,CAiBnB;AACD,KAvCD;AAwCD,GArDD;AAsDC,CAvDI;AA0DP,OAAO,MAAML,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLT,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAOP,OAAO,MAAM2B,eAAe,GAAIb,OAAD,IAAa;AAC1C,SAAO;AACLd,IAAAA,IAAI,EAAE,kBADD;AAELI,IAAAA,OAAO,EAAEU;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMc,cAAc,GAAIX,GAAD,IAAS;AACrC,MAAIY,OAAO,GAAGZ,GAAG,KAAK,OAAR,GAAkB,YAAlB,GAAiC,iBAA/C;AACA,SAAO;AACLjB,IAAAA,IAAI,EAAE6B;AADD,GAAP;AAGH,CALQ","sourcesContent":["//import {APIKEY, URL_PATH, URL_EXTENSION} from '../../assets/config'\n//import fire from '../../assets/config'\nimport firebase from \"../../assets/config\"\n\n\nexport const startScanning = () => {\n    return {\n      type: \"START_SCANNING\"\n    }\n  }\n  \n  export const clearScanned = () => {\n    return {\n      type: 'CLEAR_SCANNED'\n    }\n  }\n  \n  export const setItem = (i) => {\n    return {\n      type: 'SET_ITEM',\n      payload: i\n    }\n  }\n  \n  export const deleteItem = (i) => {\n    return {\n      type: 'DELETE_ITEM',\n      payload: i\n    }\n  }\n  \n  export const processBarcode = (barcode) => {\n    return dispatch => {\n      dispatch(spinnerOn())\n\n      //let url = URL_PATH + barcode + URL_EXTENSION + APIKEY\n      \n      let req = new Request(firebase) //, {\n      //   headers: {\n      //     'Access-Control-Allow-Origin': 'http://localhost:3000'\n      //   },\n      //   mode: 'no-cors'\n      // })\n      console.log(req);\n      let product = null\n      fetch(req)\n      .catch(err => console.log('error', err))\n      .then(res => res.json())\n      .then(res => {\n      if (res.status !== 200) {\n          return res.status\n        }\n        })\n\n      // .then(res => {\n      //   //console.log(res.status)\n      //   if(res.status !== 200){\n      //     return {\n      //       resStatus: res.status\n      //     }\n      //   } else if (res.status === 200) {\n      //     return res.json()\n      //   }\n      // })\n      \n\n        .then(parsedRes => {\n      //    if(parsedRes.resStatus !== 200){\n      //      parsedRes.resStatus === 0 ? dispatch(invalidBarcode('noAPI')) : dispatch(invalidBarcode('invalid'))\n           \n      // } else {\n          product = {\n            names: parsedRes.data[0].names,\n            description: parsedRes.data[0].description,\n            income: parsedRes.data[0].income,\n            // product_name: parsedRes.products[0].product_name,\n            // product_image: parsedRes.products[0].images[0],\n            // manufacturer: parsedRes.products[0].manufacturer,\n            // brand: parsedRes.products[0].brand,\n            // category: parsedRes.products[0].category,\n            // description: parsedRes.products[0].description,\n          }\n          dispatch(productDetected(product))\n        //} \n      })\n    }\n    }\n    \n  \n  export const spinnerOn = () => {\n    return {\n      type: 'SPINNER_ON'\n    }\n  }\n    \n    \n  export const productDetected = (product) => {\n    return {\n      type: 'PRODUCT_DETECTED',\n      payload: product\n    }\n  }\n  \n  export const invalidBarcode = (err) => {\n    let errText = err === 'noAPI' ? 'NO_API_KEY' : 'INVALID_BARCODE'\n    return {\n      type: errText,\n    }\n}\n"]},"metadata":{},"sourceType":"module"}