{"ast":null,"code":"//import {APIKEY, URL_PATH, URL_EXTENSION} from '../../assets/config'\nimport { base } from '../../assets/configOrg';\nexport const startScanning = () => {\n  return {\n    type: \"START_SCANNING\"\n  };\n};\nexport const clearScanned = () => {\n  return {\n    type: 'CLEAR_SCANNED'\n  };\n};\nexport const setItem = i => {\n  return {\n    type: 'SET_ITEM',\n    payload: i\n  };\n};\nexport const deleteItem = i => {\n  return {\n    type: 'DELETE_ITEM',\n    payload: i\n  };\n};\nexport const processBarcode = barcode => {\n  return dispatch => {\n    dispatch(spinnerOn()); //let url = URL_PATH + barcode + URL_EXTENSION + APIKEY\n\n    let req = new Request(base, {\n      headers: {\n        'Access-Control-Allow-Origin': 'http://localhost:3000'\n      },\n      mode: 'no-cors'\n    });\n    let product = null;\n    fetch(req).catch(err => console.log('error', err)).then(res => {\n      //console.log(res.status)\n      if (res.status !== 200) {\n        return {\n          resStatus: res.status\n        };\n      } else if (res.status === 200) {\n        return res.json();\n      }\n    });\n    console.log(data).then(parsedRes => {\n      if (parsedRes.resStatus !== 200) {\n        parsedRes.resStatus === 0 ? dispatch(invalidBarcode('noAPI')) : dispatch(invalidBarcode('invalid'));\n      } else {\n        console.log(\"test\");\n        product = {\n          names: parsedRes.data[0].names,\n          description: parsedRes.data[0].description,\n          income: parsedRes.data[0].income // product_name: parsedRes.products[0].product_name,\n          // product_image: parsedRes.products[0].images[0],\n          // manufacturer: parsedRes.products[0].manufacturer,\n          // brand: parsedRes.products[0].brand,\n          // category: parsedRes.products[0].category,\n          // description: parsedRes.products[0].description,\n\n        };\n        dispatch(productDetected(product));\n      }\n    });\n  };\n};\nexport const spinnerOn = () => {\n  return {\n    type: 'SPINNER_ON'\n  };\n};\nexport const productDetected = product => {\n  return {\n    type: 'PRODUCT_DETECTED',\n    payload: product\n  };\n};\nexport const invalidBarcode = err => {\n  let errText = err === 'noAPI' ? 'NO_API_KEY' : 'INVALID_BARCODE';\n  return {\n    type: errText\n  };\n};","map":{"version":3,"sources":["/Users/zhangyu/Documents/barcodescanner-app/barcodescanner-app/barcodescanner/src/store/actions/scannedItems.js"],"names":["base","startScanning","type","clearScanned","setItem","i","payload","deleteItem","processBarcode","barcode","dispatch","spinnerOn","req","Request","headers","mode","product","fetch","catch","err","console","log","then","res","status","resStatus","json","data","parsedRes","invalidBarcode","names","description","income","productDetected","errText"],"mappings":"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","sourcesContent":["//import {APIKEY, URL_PATH, URL_EXTENSION} from '../../assets/config'\nimport { base } from '../../assets/configOrg'\n\nexport const startScanning = () => {\n    return {\n      type: \"START_SCANNING\"\n    }\n  }\n  \n  export const clearScanned = () => {\n    return {\n      type: 'CLEAR_SCANNED'\n    }\n  }\n  \n  export const setItem = (i) => {\n    return {\n      type: 'SET_ITEM',\n      payload: i\n    }\n  }\n  \n  export const deleteItem = (i) => {\n    return {\n      type: 'DELETE_ITEM',\n      payload: i\n    }\n  }\n  \n  export const processBarcode = (barcode) => {\n    return dispatch => {\n      dispatch(spinnerOn())\n      \n      //let url = URL_PATH + barcode + URL_EXTENSION + APIKEY\n      \n      let req = new Request(base , {\n        headers: {\n          'Access-Control-Allow-Origin': 'http://localhost:3000'\n        },\n        mode: 'no-cors'\n      })\n      \n      let product = null\n      fetch(req)\n      .catch(err => console.log('error', err))\n      .then(res => {\n        //console.log(res.status)\n        if(res.status !== 200){\n          return {\n            resStatus: res.status\n          }\n        } else if(res.status === 200) {\n          return res.json()\n        }\n      })\n      console.log(data)\n\n       .then(parsedRes => {\n         if(parsedRes.resStatus !== 200){\n           parsedRes.resStatus === 0 ? dispatch(invalidBarcode('noAPI')) : dispatch(invalidBarcode('invalid'))\n           \n      } else {\n        console.log(\"test\");\n          product = {\n            names: parsedRes.data[0].names,\n            description: parsedRes.data[0].description,\n            income: parsedRes.data[0].income,\n            // product_name: parsedRes.products[0].product_name,\n            // product_image: parsedRes.products[0].images[0],\n            // manufacturer: parsedRes.products[0].manufacturer,\n            // brand: parsedRes.products[0].brand,\n            // category: parsedRes.products[0].category,\n            // description: parsedRes.products[0].description,\n          }\n          dispatch(productDetected(product))\n        } \n      })\n    }\n    }\n  \n  export const spinnerOn = () => {\n    return {\n      type: 'SPINNER_ON'\n    }\n  }\n    \n    \n  export const productDetected = (product) => {\n    return {\n      type: 'PRODUCT_DETECTED',\n      payload: product\n    }\n  }\n  \n  export const invalidBarcode = (err) => {\n    let errText = err === 'noAPI' ? 'NO_API_KEY' : 'INVALID_BARCODE'\n    return {\n      type: errText,\n    }\n}\n"]},"metadata":{},"sourceType":"module"}