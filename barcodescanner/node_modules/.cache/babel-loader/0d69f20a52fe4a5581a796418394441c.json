{"ast":null,"code":"const initialState = {\n  spinner: false,\n  startScanning: false,\n  scannedItems: [],\n  productScanned: null,\n  invalidBarcode: false,\n  noApi: false\n};\n\nconst scannedItems = (state = initialState, action) => {\n  switch (action.type) {\n    case 'START_SCANNING':\n      return { ...state,\n        startScanning: true,\n        productScanned: null\n      };\n\n    case 'SPINNER_ON':\n      return { ...state,\n        startScanning: false,\n        spinner: true\n      };\n\n    case 'PRODUCT_DETECTED':\n      return { ...state,\n        productScanned: action.payload,\n        invalidBarcode: false,\n        noApi: false,\n        spinner: false,\n        startScanning: false,\n        scannedItems: [...state.scannedItems, action.payload]\n      };\n\n    case 'INVALID_BARCODE':\n      return { ...state,\n        productScanned: null,\n        spinner: false,\n        invalidBarcode: true,\n        noApi: false\n      };\n\n    case 'NO_API_KEY':\n      return { ...state,\n        productScanned: null,\n        spinner: false,\n        invalidBarcode: false,\n        noApi: true\n      };\n\n    case 'CLEAR_SCANNED':\n      return { ...state,\n        productScanned: null\n      };\n\n    case 'SET_ITEM':\n      let selected = state.scannedItems.filter((item, i) => {\n        return i === action.payload;\n      });\n      return { ...state,\n        productScanned: { ...selected[0]\n        }\n      };\n\n    case 'DELETE_ITEM':\n      return { ...state,\n        scannedItems: state.scannedItems.filter((item, i) => {\n          return i !== action.payload;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default scannedItems;","map":{"version":3,"sources":["/Users/zhangyu/Documents/barcodescanner-app/barcodescanner-app/barcodescanner/src/store/reducers/scannedItems.js"],"names":["initialState","spinner","startScanning","scannedItems","productScanned","invalidBarcode","noApi","state","action","type","payload","selected","filter","item","i"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,aAAa,EAAE,KAFE;AAGjBC,EAAAA,YAAY,EAAE,EAHG;AAIjBC,EAAAA,cAAc,EAAE,IAJC;AAKjBC,EAAAA,cAAc,EAAE,KALC;AAMjBC,EAAAA,KAAK,EAAE;AANU,CAArB;;AASE,MAAMH,YAAY,GAAG,CAACI,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAErD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,gBAAL;AACE,aAAM,EACJ,GAAGF,KADC;AAEJL,QAAAA,aAAa,EAAE,IAFX;AAGJE,QAAAA,cAAc,EAAE;AAHZ,OAAN;;AAKF,SAAK,YAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELL,QAAAA,aAAa,EAAE,KAFV;AAGLD,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAK,kBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,cAAc,EAAEI,MAAM,CAACE,OAFlB;AAGLL,QAAAA,cAAc,EAAE,KAHX;AAILC,QAAAA,KAAK,EAAE,KAJF;AAKLL,QAAAA,OAAO,EAAE,KALJ;AAMLC,QAAAA,aAAa,EAAE,KANV;AAOLC,QAAAA,YAAY,EAAE,CAAC,GAAGI,KAAK,CAACJ,YAAV,EAAwBK,MAAM,CAACE,OAA/B;AAPT,OAAP;;AASF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,cAAc,EAAE,IAFX;AAGLH,QAAAA,OAAO,EAAE,KAHJ;AAILI,QAAAA,cAAc,EAAE,IAJX;AAKLC,QAAAA,KAAK,EAAE;AALF,OAAP;;AAOF,SAAK,YAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELH,QAAAA,cAAc,EAAE,IAFX;AAGLH,QAAAA,OAAO,EAAE,KAHJ;AAILI,QAAAA,cAAc,EAAE,KAJX;AAKLC,QAAAA,KAAK,EAAE;AALF,OAAP;;AAOF,SAAK,eAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELH,QAAAA,cAAc,EAAE;AAFX,OAAP;;AAIF,SAAK,UAAL;AACE,UAAIO,QAAQ,GAAGJ,KAAK,CAACJ,YAAN,CAAmBS,MAAnB,CAA0B,CAACC,IAAD,EAAOC,CAAP,KAAY;AACjD,eAAOA,CAAC,KAAKN,MAAM,CAACE,OAApB;AACH,OAFc,CAAf;AAGA,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,cAAc,EAAE,EAAC,GAAGO,QAAQ,CAAC,CAAD;AAAZ;AAFX,OAAP;;AAIA,SAAK,aAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,YAAY,EAAEI,KAAK,CAACJ,YAAN,CAAmBS,MAAnB,CAA0B,CAACC,IAAD,EAAOC,CAAP,KAAa;AACnD,iBAAOA,CAAC,KAAKN,MAAM,CAACE,OAApB;AACD,SAFa;AAFT,OAAP;;AAMJ;AAAS,aAAOH,KAAP;AA3DX;AA6DD,CA/DD;;AAiEA,eAAeJ,YAAf","sourcesContent":["const initialState = {\n    spinner: false,\n    startScanning: false,\n    scannedItems: [],\n    productScanned: null,\n    invalidBarcode: false,\n    noApi: false\n  }\n  \n  const scannedItems = (state = initialState, action) => {\n  \n    switch(action.type){\n      case 'START_SCANNING':\n        return{\n          ...state,\n          startScanning: true,\n          productScanned: null\n        }\n      case 'SPINNER_ON':\n        return {\n          ...state,\n          startScanning: false,\n          spinner: true\n        }\n      case 'PRODUCT_DETECTED':\n        return {\n          ...state,\n          productScanned: action.payload,\n          invalidBarcode: false,\n          noApi: false,\n          spinner: false,\n          startScanning: false,\n          scannedItems: [...state.scannedItems, action.payload]\n        }\n      case 'INVALID_BARCODE':\n        return {\n          ...state,\n          productScanned: null,\n          spinner: false,\n          invalidBarcode: true,\n          noApi: false\n        }\n      case 'NO_API_KEY':\n        return {\n          ...state,\n          productScanned: null,\n          spinner: false,\n          invalidBarcode: false,\n          noApi: true\n        }\n      case 'CLEAR_SCANNED':\n        return {\n          ...state,\n          productScanned: null\n        }\n      case 'SET_ITEM': \n        let selected = state.scannedItems.filter((item, i)=> {\n            return i === action.payload\n        })\n        return {\n          ...state,\n          productScanned: {...selected[0]}\n        }\n        case 'DELETE_ITEM':\n          return {\n            ...state,\n            scannedItems: state.scannedItems.filter((item, i) => {\n              return i !== action.payload\n            })\n          }\n      default: return state\n    }\n  }\n  \n  export default scannedItems"]},"metadata":{},"sourceType":"module"}