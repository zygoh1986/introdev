{"ast":null,"code":"//import {APIKEY, URL_PATH, URL_EXTENSION} from '../../assets/config'\nexport const startScanning = () => {\n  return {\n    type: \"START_SCANNING\"\n  };\n};\nexport const clearScanned = () => {\n  return {\n    type: 'CLEAR_SCANNED'\n  };\n};\nexport const setItem = i => {\n  return {\n    type: 'SET_ITEM',\n    payload: i\n  };\n};\nexport const deleteItem = i => {\n  return {\n    type: 'DELETE_ITEM',\n    payload: i\n  };\n};\nexport const processBarcode = barcode => {\n  return dispatch => {\n    dispatch(spinnerOn());\n    let url = './data.json'; //URL_PATH + barcode + URL_EXTENSION + APIKEY\n\n    let req = new Request(url, {\n      headers: {\n        'Access-Control-Allow-Origin': 'http://localhost:3000'\n      },\n      mode: 'no-cors'\n    });\n    let product = null;\n    fetch(req).catch(err => console.log('error', err)).then(parsedRes => {\n      if (parsedRes.resStatus !== 200) {\n        parsedRes.resStatus === 0 ? dispatch(invalidBarcode('noAPI')) : dispatch(invalidBarcode('invalid'));\n      } else {\n        product = {\n          names: parsedRes.products[0].names,\n          barcode: parsedRes.products[0].barcode,\n          income: parsedRes.products[0].income\n        };\n        dispatch(productDetected(product));\n      }\n    });\n  };\n};\nexport const spinnerOn = () => {\n  return {\n    type: 'SPINNER_ON'\n  };\n};\nexport const productDetected = product => {\n  return {\n    type: 'PRODUCT_DETECTED',\n    payload: product\n  };\n};\nexport const invalidBarcode = err => {\n  let errText = err === 'noAPI' ? 'NO_API_KEY' : 'INVALID_BARCODE';\n  return {\n    type: errText\n  };\n};","map":{"version":3,"sources":["/Users/zhangyu/Documents/barcodescanner-app/barcodescanner-app/barcodescanner/src/store/actions/scannedItems.js"],"names":["startScanning","type","clearScanned","setItem","i","payload","deleteItem","processBarcode","barcode","dispatch","spinnerOn","url","req","Request","headers","mode","product","fetch","catch","err","console","log","then","parsedRes","resStatus","invalidBarcode","names","products","income","productDetected","errText"],"mappings":"AAAA;AAEA,OAAO,MAAMA,aAAa,GAAG,MAAM;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAME,OAAO,GAAIC,CAAD,IAAO;AAC5B,SAAO;AACLH,IAAAA,IAAI,EAAE,UADD;AAELI,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,UAAU,GAAIF,CAAD,IAAO;AAC/B,SAAO;AACLH,IAAAA,IAAI,EAAE,aADD;AAELI,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,cAAc,GAAIC,OAAD,IAAa;AACzC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,SAAS,EAAV,CAAR;AAEA,QAAIC,GAAG,GAAG,aAAV,CAHiB,CAGO;;AAExB,QAAIC,GAAG,GAAG,IAAIC,OAAJ,CAAYF,GAAZ,EAAkB;AAC1BG,MAAAA,OAAO,EAAE;AACP,uCAA+B;AADxB,OADiB;AAI1BC,MAAAA,IAAI,EAAE;AAJoB,KAAlB,CAAV;AAOA,QAAIC,OAAO,GAAG,IAAd;AACAC,IAAAA,KAAK,CAACL,GAAD,CAAL,CACCM,KADD,CACOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB,CADd,EAECG,IAFD,CAEMC,SAAS,IAAI;AACjB,UAAGA,SAAS,CAACC,SAAV,KAAwB,GAA3B,EAA+B;AAC7BD,QAAAA,SAAS,CAACC,SAAV,KAAwB,CAAxB,GAA4Bf,QAAQ,CAACgB,cAAc,CAAC,OAAD,CAAf,CAApC,GAAgEhB,QAAQ,CAACgB,cAAc,CAAC,SAAD,CAAf,CAAxE;AACD,OAFD,MAEO;AACLT,QAAAA,OAAO,GAAG;AACRU,UAAAA,KAAK,EAAEH,SAAS,CAACI,QAAV,CAAmB,CAAnB,EAAsBD,KADrB;AAERlB,UAAAA,OAAO,EAAEe,SAAS,CAACI,QAAV,CAAmB,CAAnB,EAAsBnB,OAFvB;AAGRoB,UAAAA,MAAM,EAAEL,SAAS,CAACI,QAAV,CAAmB,CAAnB,EAAsBC;AAHtB,SAAV;AAKAnB,QAAAA,QAAQ,CAACoB,eAAe,CAACb,OAAD,CAAhB,CAAR;AACD;AACF,KAbD;AAcD,GA3BD;AA4BC,CA7BI;AA+BP,OAAO,MAAMN,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLT,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAOP,OAAO,MAAM4B,eAAe,GAAIb,OAAD,IAAa;AAC1C,SAAO;AACLf,IAAAA,IAAI,EAAE,kBADD;AAELI,IAAAA,OAAO,EAAEW;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMS,cAAc,GAAIN,GAAD,IAAS;AACrC,MAAIW,OAAO,GAAGX,GAAG,KAAK,OAAR,GAAkB,YAAlB,GAAiC,iBAA/C;AACA,SAAO;AACLlB,IAAAA,IAAI,EAAE6B;AADD,GAAP;AAGD,CALM","sourcesContent":["//import {APIKEY, URL_PATH, URL_EXTENSION} from '../../assets/config'\n\nexport const startScanning = () => {\n  return {\n    type: \"START_SCANNING\"\n  }\n}\n\nexport const clearScanned = () => {\n  return {\n    type: 'CLEAR_SCANNED'\n  }\n}\n\nexport const setItem = (i) => {\n  return {\n    type: 'SET_ITEM',\n    payload: i\n  }\n}\n\nexport const deleteItem = (i) => {\n  return {\n    type: 'DELETE_ITEM',\n    payload: i\n  }\n}\n\nexport const processBarcode = (barcode) => {\n  return dispatch => {\n    dispatch(spinnerOn())\n    \n    let url = './data.json' //URL_PATH + barcode + URL_EXTENSION + APIKEY\n    \n    let req = new Request(url , {\n      headers: {\n        'Access-Control-Allow-Origin': 'http://localhost:3000'\n      },\n      mode: 'no-cors'\n    })\n    \n    let product = null\n    fetch(req)\n    .catch(err => console.log('error', err))\n    .then(parsedRes => {\n      if(parsedRes.resStatus !== 200){\n        parsedRes.resStatus === 0 ? dispatch(invalidBarcode('noAPI')) : dispatch(invalidBarcode('invalid'))\n      } else {\n        product = {\n          names: parsedRes.products[0].names,\n          barcode: parsedRes.products[0].barcode,\n          income: parsedRes.products[0].income,\n        }\n        dispatch(productDetected(product))\n      } \n    })\n  }\n  }\n\nexport const spinnerOn = () => {\n  return {\n    type: 'SPINNER_ON'\n  }\n}\n  \n  \nexport const productDetected = (product) => {\n  return {\n    type: 'PRODUCT_DETECTED',\n    payload: product\n  }\n}\n\nexport const invalidBarcode = (err) => {\n  let errText = err === 'noAPI' ? 'NO_API_KEY' : 'INVALID_BARCODE'\n  return {\n    type: errText,\n  }\n}"]},"metadata":{},"sourceType":"module"}