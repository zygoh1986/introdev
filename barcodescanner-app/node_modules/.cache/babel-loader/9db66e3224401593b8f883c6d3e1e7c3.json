{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zhangyu/Documents/barcodescanner-app/barcodescanner-app/barcodescanner/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nimport Navigation from './components/Navigation/Navigation';\nimport Home from './components/Home/Home';\nimport { Switch, Route } from \"react-router-dom\";\nimport Scanner from \"./Scanner\";\nimport Result from \"./Result\";\n\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"app\",\n  children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n\n_c = App;\n\nclass Cart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scanning: false,\n      results: []\n    };\n\n    this._scan = () => {\n      this.setState({\n        scanning: !this.state.scanning\n      });\n    };\n\n    this._onDetected = result => {\n      this.setState({\n        results: this.state.results.concat([result])\n      });\n    };\n  }\n\n  componentDidMount() {\n    db.collection('data').get().then(snapshot => {\n      const data = [];\n      snapshot.forEach(doc => {\n        const dataset = doc.dataset();\n        data.push(dataset);\n      });\n      this.setState({\n        data: data\n      }); //console.log(snapshot)\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        id: \"scanbtn\",\n        variant: \"outline-light\",\n        onClick: this._scan,\n        children: this.state.scanning ? \"Stop Scan Barcode\" : \"Start Scan Barcode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"results\",\n        children: this.state.results.map((result, i) => /*#__PURE__*/_jsxDEV(Result, {\n          result: result\n        }, result.codeResult.code + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), this.state.scanning ? /*#__PURE__*/_jsxDEV(Scanner, {\n        onDetected: this._onDetected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\n\nconst Main = () => /*#__PURE__*/_jsxDEV(Switch, {\n  children: [/*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    path: \"/Cart\",\n    component: Cart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 73,\n  columnNumber: 3\n}, this);\n\n_c2 = Main;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Main\");","map":{"version":3,"sources":["/Users/zhangyu/Documents/barcodescanner-app/barcodescanner-app/barcodescanner/src/App.js"],"names":["React","Component","Navigation","Home","Switch","Route","Scanner","Result","App","Cart","state","scanning","results","_scan","setState","_onDetected","result","concat","componentDidMount","db","collection","get","then","snapshot","data","forEach","doc","dataset","push","catch","error","console","log","render","map","i","codeResult","code","Main"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.css\";\nimport Navigation from './components/Navigation/Navigation'\nimport Home from './components/Home/Home'\n\n\nimport { Switch, Route } from \"react-router-dom\";\nimport Scanner from \"./Scanner\";\nimport Result from \"./Result\";\n\n\nconst App = () => (\n  <div className=\"app\">\n    <Navigation />\n    <Main />\n  </div>\n);\n\n\n\n\n  class Cart extends Component {\n    state = {\n      scanning: false,\n      results: [],\n    };\n\n    _scan = () => {\n      this.setState({ scanning: !this.state.scanning });\n    };\n\n    _onDetected = (result) => {\n      this.setState({ results: this.state.results.concat([result]) });\n    };\n\n    componentDidMount(){\n      db.collection('data')\n        .get()\n        .then (snapshot => {\n          const data = []\n          snapshot.forEach( doc => {\n            const dataset = doc.dataset()\n            data.push(dataset)\n          })\n          this.setState({ data: data})\n\n          //console.log(snapshot)\n        })\n        .catch (error => console.log(error))\n    }\n\n    render() {\n      return (\n        <div>\n          <Button id=\"scanbtn\"variant=\"outline-light\" onClick={this._scan}>\n            {this.state.scanning ? \"Stop Scan Barcode\" : \"Start Scan Barcode\"}\n          </Button>\n          <ul className=\"results\">\n\n            {this.state.results.map((result, i) => (\n              <Result key={result.codeResult.code + i} result={result} />\n            ))}\n          </ul>\n          {this.state.scanning ? (\n            <Scanner onDetected={this._onDetected} />\n          ) : null}\n        </div>\n      );\n    }\n  };\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home}></Route>\n    <Route exact path=\"/Cart\" component={Cart}></Route>\n  </Switch>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}