{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zhangyu/Documents/barcodescanner-app/barcodescanner-app/barcodescanner/src/components/Scan.js\";\nimport Scanner from \"./Scanner\";\nimport Result from \"./Result\";\nimport Button from \"react-bootstrap/Button\";\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scanning: false,\n      results: []\n    };\n\n    this._scan = () => {\n      this.setState({\n        scanning: !this.state.scanning\n      });\n    };\n\n    this._onDetected = result => {\n      this.setState({\n        results: this.state.results.concat([result])\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: this._scan,\n        children: this.state.scanning ? \"Stop Camera\" : \"Start Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"results\",\n        children: this.state.results.map((result, i) => /*#__PURE__*/_jsxDEV(Result, {\n          result: result\n        }, result.codeResult.code + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), this.state.scanning ? /*#__PURE__*/_jsxDEV(Scanner, {\n        onDetected: this._onDetected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 34\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/zhangyu/Documents/barcodescanner-app/barcodescanner-app/barcodescanner/src/components/Scan.js"],"names":["Scanner","Result","Button","React","Component","App","state","scanning","results","_scan","setState","_onDetected","result","concat","render","map","i","codeResult","code"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBE,KADwB,GAChB;AACNC,MAAAA,QAAQ,EAAE,KADJ;AAENC,MAAAA,OAAO,EAAE;AAFH,KADgB;;AAAA,SAMxBC,KANwB,GAMhB,MAAM;AACZ,WAAKC,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAxB,OAAd;AACD,KARuB;;AAAA,SAUxBI,WAVwB,GAUTC,MAAD,IAAY;AACxB,WAAKF,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OAAX,CAAmBK,MAAnB,CAA0B,CAACD,MAAD,CAA1B;AAAX,OAAd;AACD,KAZuB;AAAA;;AAcxBE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE,KAAKL,KAAxC;AAAA,kBACG,KAAKH,KAAL,CAAWC,QAAX,GAAsB,aAAtB,GAAsC;AADzC;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA,kBACG,KAAKD,KAAL,CAAWE,OAAX,CAAmBO,GAAnB,CAAuB,CAACH,MAAD,EAASI,CAAT,kBACtB,QAAC,MAAD;AAAyC,UAAA,MAAM,EAAEJ;AAAjD,WAAaA,MAAM,CAACK,UAAP,CAAkBC,IAAlB,GAAyBF,CAAtC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAJF,EASG,KAAKV,KAAL,CAAWC,QAAX,gBAAsB,QAAC,OAAD;AAAS,QAAA,UAAU,EAAE,KAAKI;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAtB,GAAkE,IATrE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA5BuB","sourcesContent":["import Scanner from \"./Scanner\";\nimport Result from \"./Result\";\nimport Button from \"react-bootstrap/Button\";\nimport React, { Component } from \"react\";\n\n\nclass App extends Component {\n    state = {\n      scanning: false,\n      results: [],\n    };\n  \n    _scan = () => {\n      this.setState({ scanning: !this.state.scanning });\n    };\n  \n    _onDetected = (result) => {\n      this.setState({ results: this.state.results.concat([result]) });\n    };\n  \n    render() {\n      return (\n        <div>\n          <Button variant=\"primary\" onClick={this._scan}>\n            {this.state.scanning ? \"Stop Camera\" : \"Start Camera\"}\n          </Button>\n          <ul className=\"results\">\n            {this.state.results.map((result, i) => (\n              <Result key={result.codeResult.code + i} result={result} />\n            ))}\n          </ul>\n          {this.state.scanning ? <Scanner onDetected={this._onDetected} /> : null}\n        </div>\n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}